{{- range .Values.scheduledPolicies }}
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: "{{ include "cloud-custodian-cron.fullname" $ }}-{{ .name }}"
  labels:
    {{- include "cloud-custodian-cron.labels" $ | nindent 4 }}
spec:
  concurrencyPolicy: {{ default "Allow" .concurrencyPolicy }}
  schedule: {{ required "Scheduled policy must contain a schedule key" .schedule | quote }}
  failedJobsHistoryLimit: {{ .failedJobsHistoryLimit }}
  successfulJobsHistoryLimit: {{ .successfulJobsHistoryLimit }}
  jobTemplate:
    spec:
      backOffLimit: 
      template:
        metadata:
          {{- with $.Values.podAnnotations }}
          annotations:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          labels:
            {{- include "cloud-custodian-cron.selectorLabels" $ | nindent 12 }}
        spec:
          volumes:
          - name: policy
            configMap:
              name: "{{ include "cloud-custodian-cron.fullname" $ }}-{{ .name }}"
          {{- with $.Values.imagePullSecrets }}
          imagePullSecrets:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          serviceAccountName: {{ include "cloud-custodian-cron.serviceAccountName" $ }}
          securityContext:
            {{- toYaml $.Values.podSecurityContext | nindent 12 }}
          containers:
          - name: {{ $.Chart.Name }}
            securityContext:
              {{- toYaml $.Values.securityContext | nindent 14 }}
            image: "{{ $.Values.image.repository }}:{{ $.Values.image.tag | default $.Chart.AppVersion }}"
            imagePullPolicy: {{ $.Values.image.pullPolicy }}
            workingDir: "/home/custodian"
            args:
              - run
              - -v
              - -s
              - {{ required "outputDirectory is required." .outputDirectory }}
            {{- if .metricsProvider }}
              - -m
              - {{ .metricsProvider }}
            {{- end }}
              - policies.yaml
            env:
              {{- if $.Values.aws }}
              - name: AWS_ACCESS_KEY_ID
                valueFrom:
                  secretKeyRef:
                    name: {{ include "cloud-custodian-cron.fullname" $ }}
                    key: accessKey
              - name: AWS_SECRET_ACCESS_KEY
                valueFrom:
                  secretKeyRef:
                    name: {{ include "cloud-custodian-cron.fullname" $ }}
                    key: secretKey
              - name: AWS_DEFAULT_REGION
                valueFrom:
                  secretKeyRef:
                    name: {{ include "cloud-custodian-cron.fullname" $ }}
                    key: defaultRegion
              {{- end }}
            volumeMounts:
            - name: policy
              mountPath: /home/custodian
            resources:
              {{- toYaml $.Values.resources | nindent 14 }}
          {{- with $.Values.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with $.Values.affinity }}
          affinity:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with $.Values.tolerations }}
          tolerations:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          restartPolicy: {{ default "OnFailure" .restartPolicy }}
{{- end }}
